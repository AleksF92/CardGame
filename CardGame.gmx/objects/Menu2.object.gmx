<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize
MIN_SIZE = 0.1;
MAX_SIZE = 5;
enum STAR_DATA { X, Y, R, COLOR, ALPHA, DIRECTION, COUNT };
starData = ds_list_create();

//Create stars
var MAX_STARS = 300;
for (var i = 0; i &lt; MAX_STARS; i++) {
    ds_list_add(starData, irandom(1920));                       //X
    ds_list_add(starData, irandom(1080));                       //Y
    ds_list_add(starData, irandom_range(1, MAX_SIZE));                 //R
    ds_list_add(starData, c_random("blue"));                    //Color
    ds_list_add(starData, random(1));                           //Alpha
    ds_list_add(starData, choose(1, -1));                       //Direction
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_list_destroy(starData);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Update stars
var starCount = ds_list_size(starData) / STAR_DATA.COUNT;
for (var i = 0; i &lt; starCount; i++) {
    //Retrive star data
    var start = i * STAR_DATA.COUNT;
    var sX = starData[| start + STAR_DATA.X];
    var sY = starData[| start + STAR_DATA.Y];
    var sR = starData[| start + STAR_DATA.R];
    var sColor = starData[| start + STAR_DATA.COLOR];
    var sAlpha = starData[| start + STAR_DATA.ALPHA];
    var sDirection = starData[| start + STAR_DATA.DIRECTION];
    
    //Update data
    sAlpha += 0.01 * sDirection;
    if (sAlpha &gt;= 1 &amp;&amp; sDirection == 1) {
        //Fully visible
        sAlpha = 1;
        sDirection = -1;
    }
    if (sAlpha &lt;= 0 &amp;&amp; sDirection == -1) {
        //Fully invisible
        sAlpha = 0;
        sDirection = 1;
        
        //Randomize star
        sX = irandom(1920);
        sY = irandom(1080);
        sR = irandom_range(1, MAX_SIZE);
        sColor = c_random("blue");
    }
    
    //Save new star data
    starData[| start + STAR_DATA.X] = sX;
    starData[| start + STAR_DATA.Y] = sY;
    starData[| start + STAR_DATA.R] = sR;
    starData[| start + STAR_DATA.COLOR] = sColor;
    starData[| start + STAR_DATA.ALPHA] = sAlpha;
    starData[| start + STAR_DATA.DIRECTION] = sDirection;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Update stars
var starCount = ds_list_size(starData) / STAR_DATA.COUNT;
for (var i = 0; i &lt; starCount; i++) {
    //Retrive star data
    var start = i * STAR_DATA.COUNT;
    var sX = starData[| start + STAR_DATA.X];
    var sY = starData[| start + STAR_DATA.Y];
    var sR = starData[| start + STAR_DATA.R];
    var sColor = starData[| start + STAR_DATA.COLOR];
    var sAlpha = starData[| start + STAR_DATA.ALPHA];
    
    //Draw star
    var dc = draw_get_colour();
    var da = draw_get_alpha();
    draw_set_colour(sColor);
    draw_set_alpha(sAlpha);
        draw_circle(sX, sY, sR, false);
    draw_set_colour(dc);
    draw_set_alpha(da);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
